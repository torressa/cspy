name: PyPI Release

on:
  release:
    types:
      - published


#  TODO add windows as per:
# https://github.com/Niraj-Kamdar/manylinux-wheel-builder#advanced-usage
jobs:
  macos-build:
    runs-on: macos-latest
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Swig install
        run: brew install swig
      - name: Install LEMON
        run: |
          cp tools/docker/scripts/install_lemon .
          chmod u+x install_lemon
          ./install_lemon
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Configure
        run: |
          echo $pythonLocation
          echo $pythonVersion
          cmake -S . -Bbuild -DBUILD_TESTING=ON -DBUILD_PYTHON=ON -DBUILD_SHARED_LIBS=ON -DPython3_ROOT_DIR=${pythonLocation} -DPython_ROOT_DIR=${pythonLocation} -DPython3_FIND_STRATEGY=LOCATION
      - name: Build
        run: cmake --build build --config Release --target all -v
      - name: Fix wheel and run python tests
        run: |
          python3 -m pip install delocate wheel
          delocate-listdeps --all build/python/dist/*.whl
          delocate-wheel -w wheelhouse -v build/python/dist/*.whl
          cd build
          ctest --verbose -R python_unittest
      - name: upload wheel
        run: |
          python3 -m pip install twine
          twine upload wheelhouse/*
        continue-on-error: true

  windows-build:
    runs-on: windows-latest
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check cmake
        run: cmake --version
      - name: Install SWIG 4.0.2
        run: |
          (New-Object System.Net.WebClient).DownloadFile("http://prdownloads.sourceforge.net/swig/swigwin-4.0.2.zip","swigwin-4.0.2.zip");
          Expand-Archive .\swigwin-4.0.2.zip .;
          echo "$((Get-Item .).FullName)/swigwin-4.0.2" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Check swig
        run: swig -version
      - name: Install LEMON 1.3.1
        run: |
          (New-Object System.Net.WebClient).DownloadFile("http://lemon.cs.elte.hu/pub/sources/lemon-1.3.1.zip","lemon-1.3.1.zip");
          Expand-Archive .\lemon-1.3.1.zip .;
          cd lemon-1.3.1;
          cmake -S. -Bbuild -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release -DLEMON_ENABLE_GLPK=NO -DLEMON_ENABLE_COIN=NO -DLEMON_ENABLE_ILOG=NO;
          cmake --build build --config Release --target ALL_BUILD -- /verbosity:normal /maxcpucounte;
          cmake --build build --config Release --target INSTALL -- /verbosity:normal /maxcpucount
      - name: Configure
        run: cmake -S. -Bbuild -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Release -DBUILD_PYTHON=ON -DBUILD_TESTING=ON -DPython3_ROOT_DIR=$env:pythonLocation -DPython_ROOT_DIR=$env:pythonLocation -DPython3_FIND_STRATEGY=LOCATION -DPython3_FIND_REGISTRY=LAST
      - name: Build
        run: cmake --build build --config Release --target ALL_BUILD -- /verbosity:normal /maxcpucount
      - name: Run python tests
        run: |
            cd build
            ctest -C Release --verbose
      - name: upload wheel
        run: |
          pip install twine
          twine upload .\build\python\dist\*
        continue-on-error: true


# TODO use docker image (same os tools/python.Dockerfile
# manylinux-build:
#   runs-on: ubuntu-latest
#   env:
#     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#   strategy:
#     matrix:
#       python-version: [3.6, 3.7, 3.8, 3.9]
#   steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Configure
#       run: cmake -S . -Bbuild -DBUILD_TESTING=ON -DBUILD_PYTHON=ON -DBUILD_SHARED_LIBS=ON
#     - name: Build
#       run: cmake --build build --config Release --target all -v
#     - name: Fix wheel and run python tests
#       run: |
#         python3 -m pip install auditwheel
#         auditwheel repair build/python/dist/*.whl --plat manylinux2014_x86_64
#         cd build
#         ctest --verbose -R python_unittest
#     - name: upload wheel
#       run: |
#         pip install twine
#         twine upload wheelhouse/*
#       continue-on-error: true
