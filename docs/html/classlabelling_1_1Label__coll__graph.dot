digraph "labelling::Label"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{labelling::Label\n||+ Label()\l+ Label()\l+ Label()\l+ ~Label()\l+ extend()\l+ checkDominance()\l+ fullDominance()\l+ checkFeasibility()\l+ checkThreshold()\l+ checkStPath()\l+ checkPathExtension()\l+ checkSameFeasibleExtension\lTwoCycleSimple()\l+ checkSameFeasibleExtension\lElementary()\l+ checkSameFeasibleExtension()\l+ setPhi()\l+ getPredecessorId()\l+ getString()\l+ operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +resource_consumption" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{vector\< double \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +phi\n+weight" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{double\n||}",height=0.2,width=0.4,color="grey75"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +unreachable_nodes" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{set\< int \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +partial_path" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{vector\< int \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +vertex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{bidirectional::Vertex\n||}",height=0.2,width=0.4,color="black",URL="$structbidirectional_1_1Vertex.html"];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +user_id\n+lemon_id" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +params_ptr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{bidirectional::Params\n||+ Params()\l+ ~Params()\l+ setDirection()\l+ setMethod()\l+ setTimeLimit()\l+ setThreshold()\l+ setElementary()\l+ setTwoCycleElimination()\l+ setBoundsPruning()\l+ setFindCriticalRes()\l+ setCriticalRes()\l+ setREFCallback()\l}",height=0.2,width=0.4,color="black",URL="$classbidirectional_1_1Params.html"];
  Node3 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +threshold\n+time_limit" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +ref_callback" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{bidirectional::REFCallback\n||+ REFCallback()\l+ ~REFCallback()\l+ REF_fwd()\l+ REF_bwd()\l+ REF_join()\l}",height=0.2,width=0.4,color="black",URL="$classbidirectional_1_1REFCallback.html"];
  Node10 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +direction" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{Directions\n||}",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +critical_res" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +bounds_pruning\n+find_critical_res\n+elementary\n+two_cycle_elimination" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{bool\n||}",height=0.2,width=0.4,color="grey75"];
  Node12 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +method" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{string\n||}",height=0.2,width=0.4,color="grey75"];
}
